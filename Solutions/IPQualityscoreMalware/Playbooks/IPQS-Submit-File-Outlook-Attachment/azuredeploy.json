{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "IPQS-Submit-File-Outlook-Attachment",
        "description": "Submits file attachments from Outlook emails to IPQualityScore (IPQS) for analysis and reputation scoring. Helps identify and block malicious attachments detected through email alerts or incidents in Microsoft Sentinel.",
        "prerequisites": "IPQS API Key.",
        "postDeployment": [
            "None"
        ],
        "lastUpdateTime": "2023-04-04T00:00:00.000Z",
        "entities": [
            ""
        ],
        "tags": [
            "Enrichment"
        ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "David Mackler, IPQualityScore"
        },
        "releaseNotes": [
            {
                "version": "1.0.0",
                "title": "IPQS-Submit-File-Outlook-Attachment",
                "notes": [
                    "Initial version"
                ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "IPQS-Submit-File-Outlook-Attachment",
            "type": "String",
            "metadata": {
                "description": "Name of the Logic App/Playbook"
            }
        },
        "WorkspaceName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Log Analytics Workspace name"
            }
        },
        "WorkspaceID": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Log Analytics Workspace ID"
            }
        },
        "FunctionAppName": {
            "defaultValue": "ipqsenrich",
            "type": "String",
            "metadata": {
                "description": "Name of the FunctionApp"
            }
        }
    },
    "variables": {
        "FunctionAppName": "[concat(toLower(parameters('FunctionAppName')), take(uniqueString(resourceGroup().id), 3))]",
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "Office365V1": "[concat('office365-', parameters('PlaybookName'))]",
        "subscription": "[last(split(subscription().id, '/'))]",
        "resourceGroupName": "[resourceGroup().name]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Office365V1')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('Office365V1')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('Office365V1'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "Notify Via Email": {
                            "defaultValue": true,
                            "type": "Bool"
                        },
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_new_email_arrives_(V3)": {
                            "splitOn": "@triggerBody()?['value']",
                            "type": "ApiConnectionNotification",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "fetch": {
                                    "pathTemplate": {
                                        "template": "/v3/Mail/OnNewEmail"
                                    },
                                    "method": "get",
                                    "queries": {
                                        "importance": "Any",
                                        "fetchOnlyWithAttachment": true,
                                        "includeAttachments": true,
                                        "folderPath": "Inbox"
                                    }
                                },
                                "subscribe": {
                                    "body": {
                                        "NotificationUrl": "@listCallbackUrl()"
                                    },
                                    "pathTemplate": {
                                        "template": "/GraphMailSubscriptionPoke/$subscriptions"
                                    },
                                    "method": "post",
                                    "queries": {
                                        "importance": "Any",
                                        "fetchOnlyWithAttachment": true,
                                        "folderPath": "Inbox"
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "Scan_Status": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "scan_status",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Scan_Report": {
                            "runAfter": {
                                "Raw_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "scan_report",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Email_Body": {
                            "runAfter": {
                                "Threat_Verdict_Rows": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "email_body",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "File_Name": {
                            "runAfter": {
                                "Email_Body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "file_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "For_Every_Attachment": {
                            "foreach": "@triggerBody()?['attachments']",
                            "actions": {
                                "Check_for_Result": {
                                    "actions": {
                                        "Append_to_Raw_Response_array_variable": {
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "raw_results",
                                                "value": "@body('IPQSLookupFile')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "IPQSLookupFile": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "If_Success": {
                                                "actions": {
                                                    "Set_Scan_Status_varibale_to_False": {
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "scan_status",
                                                            "value": false
                                                        }
                                                    },
                                                    "Wait_untill_scan_is_completed": {
                                                        "actions": {
                                                            "Check_If_Scan_is_finished": {
                                                                "actions": {
                                                                    "Set_Scan_Status_to_True": {
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "scan_status",
                                                                            "value": true
                                                                        }
                                                                    },
                                                                    "Append_to_Raw_Response_array_variable1": {
                                                                        "runAfter": {
                                                                            "Set_Scan_Status_to_True": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "AppendToArrayVariable",
                                                                        "inputs": {
                                                                            "name": "raw_results",
                                                                            "value": "@body('IPQSLookupRequestId')"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {
                                                                    "IPQSLookupRequestId": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "else": {
                                                                    "actions": {
                                                                        "Delay_by_2_minutes": {
                                                                            "type": "Wait",
                                                                            "inputs": {
                                                                                "interval": {
                                                                                    "count": 2,
                                                                                    "unit": "Minute"
                                                                                }
                                                                            }
                                                                        },
                                                                        "Set_submission_status_to_false_again": {
                                                                            "runAfter": {
                                                                                "Delay_by_2_minutes": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "SetVariable",
                                                                            "inputs": {
                                                                                "name": "scan_status",
                                                                                "value": false
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "equals": [
                                                                                "@body('IPQSLookupRequestId')?['success']",
                                                                                true
                                                                            ]
                                                                        },
                                                                        {
                                                                            "or": [
                                                                                {
                                                                                    "equals": [
                                                                                        "@body('IPQSLookupRequestId')?['status']",
                                                                                        "done"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "equals": [
                                                                                        "@body('IPQSLookupRequestId')?['status']",
                                                                                        "cached"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            },
                                                            "IPQSLookupRequestId": {
                                                                "type": "Function",
                                                                "inputs": {
                                                                    "body": {
                                                                        "request_id": "@body('IPQSSubmitFile')?['request_id']"
                                                                    },
                                                                    "function": {
                                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('FunctionAppName'), '/functions/IPQSLookupRequestId')]"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Set_Scan_Status_varibale_to_False": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "expression": "@equals(variables('scan_status'), true)",
                                                        "limit": {
                                                            "count": 60,
                                                            "timeout": "PT1H"
                                                        },
                                                        "type": "Until"
                                                    }
                                                },
                                                "runAfter": {
                                                    "IPQSSubmitFile": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "else": {
                                                    "actions": {}
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "equals": [
                                                                "@body('IPQSSubmitFile')?['success']",
                                                                true
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "IPQSSubmitFile": {
                                                "type": "Function",
                                                "inputs": {
                                                    "body": {
                                                        "file": "@item()?['contentBytes']",
                                                        "name": "@item()?['name']",
                                                        "tags": [
                                                            "outlook_attachment_logic_app_submission"
                                                        ]
                                                    },
                                                    "function": {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('FunctionAppName'), '/functions/IPQSSubmitFile')]"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('IPQSLookupFile')?['success']",
                                                    true
                                                ]
                                            },
                                            {
                                                "greater": [
                                                    "@length(body('IPQSLookupFile')?['result'])",
                                                    1
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "IPQSLookupFile": {
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "file": "@item()?['contentBytes']",
                                            "name": "@item()?['name']",
                                            "tags": [
                                                "outlook_attachment_logic_app_submission"
                                            ]
                                        },
                                        "function": {
                                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('FunctionAppName'), '/functions/IPQSLookupFile')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "File_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "For_each_Raw_Result": {
                            "foreach": "@variables('raw_results')",
                            "actions": {
                                "Set_Detected": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "detected",
                                        "value": "@items('For_each_Raw_Result')['detected']"
                                    }
                                },
                                "Check_If_File_is_Malicious_or_Suspicious": {
                                    "actions": {
                                        "Create_HTML_table": {
                                            "runAfter": {
                                                "Set_scan_report": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Table",
                                            "inputs": {
                                                "from": "@variables('scan_report')",
                                                "format": "HTML"
                                            }
                                        },
                                        "Create_an_Incident": {
                                            "runAfter": {
                                                "Create_HTML_table": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "put",
                                                "body": {
                                                    "title": "IPQS Email Attachment Scan Submission Details for file - @{items('For_each_Raw_Result')?['file_name']}",
                                                    "severity": "Medium",
                                                    "status": "New",
                                                    "description": "IPQS Email Attachment Scan . From:@{triggerBody()?['from']}. To: @{triggerBody()?['toRecipients']}"
                                                },
                                                "path": "/Incidents/subscriptions/@{encodeURIComponent('7356a8d4-94f5-4210-a777-f4d6329e1c71')}/resourceGroups/@{encodeURIComponent('IPQSMalware')}/workspaces/@{encodeURIComponent('IPQSMalware-LAW')}"
                                            }
                                        },
                                        "Add_a_comment_to_incident_(V3)": {
                                            "runAfter": {
                                                "Create_an_Incident": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": {
                                                    "incidentArmId": "@body('Create_an_Incident')?['id']",
                                                    "message": "<p class=\"editor-paragraph\">IPQS Submission for File -@{items('For_each_Raw_Result')?['file_name']}</p><p class=\"editor-paragraph\">@{body('Create_HTML_table')}</p><br>"
                                                },
                                                "path": "/Incidents/Comment"
                                            }
                                        },
                                        "Check_Notify_Via_Email": {
                                            "actions": {
                                                "Send_a_email_(V2)": {
                                                    "runAfter": {
                                                        "Compose_HTML_Email": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365-2']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "To": "lshaik@loginsoft.com",
                                                            "Subject": "IPQS Email Attachment Scan for file - ",
                                                            "Body": "<p class=\"editor-paragraph\">@{variables('email_body')}</p>",
                                                            "Importance": "Normal"
                                                        },
                                                        "path": "/v2/Mail"
                                                    }
                                                },
                                                "Apply_to_each": {
                                                    "foreach": "@outputs('Parse_JSON_Result')['body']",
                                                    "actions": {
                                                        "Append_to__Threat_Verdict_Rows_string_variable": {
                                                            "type": "AppendToStringVariable",
                                                            "inputs": {
                                                                "name": "threat_verdict_rows",
                                                                "value": "<tr>\n  <td style=\"width: 30%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('Apply_to_each')?['name']}</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">Detected: @{items('Apply_to_each')?['detected']}, Error: @{items('Apply_to_each')?['error']}</td>\n</tr>\n"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Reset_Threat_Verdict_Variable_to_empty": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "Set_a_email_body": {
                                                    "runAfter": {
                                                        "Apply_to_each": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "email_body",
                                                        "value": "<p class=\"editor-paragraph\">\n<table style=\"width: 100%; border-collapse: collapse; background-color: #ffffff;\">\n<tbody>\n<tr>\n  <td style=\"width:30%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">File Name</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['file_name']}</td>\n</tr>\n<tr>\n  <td style=\"width:30%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">File Hash</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['file_hash']}</td>\n</tr>\n<tr>\n  <td style=\"width:30%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">SHA1</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['sha1']}</td>\n</tr>\n<tr>\n  <td style=\"width:30%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">MD5</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['md5']}</td>\n</tr>\n<tr>\n  <td style=\"width:30%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">File Size</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['file_size']}</td>\n</tr>\n<tr>\n  <td style=\"width:30%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">Detected</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{variables('detected')}</td>\n</tr>\n@{variables('threat_verdict_rows')}\n<tr>\n  <td style=\"width:30%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">File Type</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['file_type']}</td>\n</tr>\n</tbody>\n</table>\n</p>"
                                                    }
                                                },
                                                "Compose_HTML_Email": {
                                                    "runAfter": {
                                                        "Set_a_email_body": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@{variables('email_body')}\n"
                                                },
                                                "Reset_Threat_Verdict_Variable_to_empty": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "threat_verdict_rows",
                                                        "value": "@null"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Add_a_comment_to_incident_(V3)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {}
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@parameters('Notify Via Email')",
                                                            true
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Set_scan_report": {
                                            "runAfter": {
                                                "Parse_JSON_Result": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "scan_report",
                                                "value": [
                                                    {
                                                        "File Name": "@items('For_each_Raw_Result')?['file_name']",
                                                        "File Hash": "@items('For_each_Raw_Result')?['file_hash']",
                                                        "SHA1": "@items('For_each_Raw_Result')?['sha1']",
                                                        "MD5": "@items('For_each_Raw_Result')?['md5']",
                                                        "File Size": "@items('For_each_Raw_Result')?['file_size']",
                                                        "Detected": "@items('For_each_Raw_Result')?['detected']",
                                                        "Result": "@replace(replace(string(items('For_each_Raw_Result')?['result']), '[', ''), ']', '')\r\n",
                                                        "File Type": "@items('For_each_Raw_Result')?['file_type']"
                                                    }
                                                ]
                                            }
                                        },
                                        "Parse_JSON_Result": {
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@items('For_each_Raw_Result')?['result']\n",
                                                "schema": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "detected": {
                                                                "type": "boolean"
                                                            },
                                                            "error": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_Detected": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Set_email_body": {
                                                "runAfter": {
                                                    "Apply_to_each1": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "email_body",
                                                    "value": "<div>\n<p class=\"editor-paragraph\">\n<table style=\"width: 100%; border-collapse: collapse; background-color: #ffffff;\">\n<tbody>\n<tr>\n  <td style=\"width: 15%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">File Name</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['file_name']}</td>\n</tr>\n<tr>\n  <td style=\"width: 15%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">File Hash</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['file_hash']}</td>\n</tr>\n<tr>\n  <td style=\"width: 15%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">SHA1</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['sha1']}</td>\n</tr>\n<tr>\n  <td style=\"width: 15%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">MD5</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['md5']}</td>\n</tr>\n<tr>\n  <td style=\"width: 15%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">File Size</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['file_size']}</td>\n</tr>\n<tr>\n  <td style=\"width: 15%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">Detected</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{variables('detected')}</td>\n</tr>\n@{variables('threat_verdict_rows')}\n<tr>\n  <td style=\"width: 15%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">File Type</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('For_each_Raw_Result')?['file_type']}</td>\n</tr>\n</tbody>\n</table>\n</p>\n</div>\n"
                                                }
                                            },
                                            "Send_an_email_(V2)": {
                                                "runAfter": {
                                                    "Compose_HTML_Email1": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['office365-2']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "body": {
                                                        "To": "lshaik@loginsoft.com",
                                                        "Subject": "IPQS Email Attachment Scan for file - ",
                                                        "Body": "<p class=\"editor-paragraph\">@{outputs('Compose_HTML_Email1')}</p>",
                                                        "Importance": "Normal"
                                                    },
                                                    "path": "/v2/Mail"
                                                }
                                            },
                                            "Parse_JSON_Result1": {
                                                "type": "ParseJson",
                                                "inputs": {
                                                    "content": "@items('For_each_Raw_Result')?['result']\n",
                                                    "schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "detected": {
                                                                    "type": "boolean"
                                                                },
                                                                "error": {
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "Compose_HTML_Email1": {
                                                "runAfter": {
                                                    "Set_email_body": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Compose",
                                                "inputs": "@{variables('email_body')}\n"
                                            },
                                            "Apply_to_each1": {
                                                "foreach": "@outputs('Parse_JSON_Result1')['body']",
                                                "actions": {
                                                    "Append_to__Threat_Verdict_Rows_string_variable_1": {
                                                        "type": "AppendToStringVariable",
                                                        "inputs": {
                                                            "name": "threat_verdict_rows",
                                                            "value": "<tr>\n  <td style=\"width: 15%; background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\">@{items('Apply_to_each1')?['name']}</td>\n  <td style=\"background-color: #f4f6f8; padding: 10px; text-align: left; border: 1px solid #ddd;\">Detected: @{items('Apply_to_each1')?['detected']}, Error: @{items('Apply_to_each1')?['error']}</td>\n</tr>\n"
                                                        }
                                                    }
                                                },
                                                "runAfter": {
                                                    "Reset_Threat_Verdict_Variable_to_empty1": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Foreach"
                                            },
                                            "Reset_Threat_Verdict_Variable_to_empty1": {
                                                "runAfter": {
                                                    "Parse_JSON_Result1": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "threat_verdict_rows",
                                                    "value": "@null"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@variables('detected')",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "For_Every_Attachment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Detected": {
                            "runAfter": {
                                "Scan_Status": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "detected",
                                        "type": "boolean"
                                    }
                                ]
                            }
                        },
                        "Threat_Verdict_Rows": {
                            "runAfter": {
                                "Scan_Report": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "threat_verdict_rows",
                                        "type": "string",
                                        "value": "\"\""
                                    }
                                ]
                            }
                        },
                        "Raw_Response": {
                            "runAfter": {
                                "Detected": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "raw_results",
                                        "type": "array"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365V1'))]",
                                "connectionName": "[variables('Office365V1')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}